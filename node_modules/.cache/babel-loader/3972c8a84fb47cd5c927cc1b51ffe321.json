{"ast":null,"code":"import _slicedToArray from \"C:\\\\learn\\\\weddinginvitation\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\learn\\\\weddinginvitation\\\\src\\\\components\\\\CountDown.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst CountDown = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isExpired = _useState2[0],\n        setIsExpired = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        days = _useState4[0],\n        setDays = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hours = _useState6[0],\n        setHours = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        minutes = _useState8[0],\n        setMinutes = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        seconds = _useState10[0],\n        setSeconds = _useState10[1];\n\n  useEffect(() => {\n    const countDownDate = new Date(\"Dec 11, 2019 22:53:35\").getTime();\n    const x = setInterval(() => {\n      // Get today's date and time\n      const now = new Date().getTime(); // Find the distance between now and the count down date\n\n      const distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n      const day = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hour = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minute = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const second = Math.floor(distance % (1000 * 60) / 1000);\n\n      if (days !== day) {\n        setDays(day);\n      }\n\n      if (hours !== hour) {\n        setHours(hour);\n      }\n\n      if (minutes !== minute) {\n        setMinutes(minute);\n      }\n\n      if (seconds !== second) {\n        setSeconds(second);\n      } // If the count down is finished, write some text \n\n\n      if (distance < 0) {\n        clearInterval(x);\n        setIsExpired(true);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(x);\n    };\n  }, [days, hours, minutes, seconds]);\n  return React.createElement(\"section\", {\n    className: \"section counter-area center-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Don't miss it!\"), React.createElement(\"span\", {\n    className: \"heading-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"color-white icon icon-star\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-sm-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"remaining-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isExpired ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Yay....\") : React.createElement(\"div\", {\n    id: \"clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-sec\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, days), \" Days \"), React.createElement(\"div\", {\n    className: \"time-sec\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, hours), \" Hours \"), React.createElement(\"div\", {\n    className: \"time-sec\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, minutes), \" Minutes \"), React.createElement(\"div\", {\n    className: \"time-sec\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, seconds), \" Seconds \")))))));\n};\n\nexport default CountDown;","map":{"version":3,"sources":["C:\\learn\\weddinginvitation\\src\\components\\CountDown.js"],"names":["React","useState","useEffect","CountDown","isExpired","setIsExpired","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","countDownDate","Date","getTime","x","setInterval","now","distance","day","Math","floor","hour","minute","second","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CountDown = () => {\r\n    const [isExpired, setIsExpired] = useState(false);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n    useEffect(() => {\r\n        const countDownDate = new Date(\"Dec 11, 2019 22:53:35\").getTime();\r\n        const x = setInterval(() => {\r\n\r\n            // Get today's date and time\r\n            const now = new Date().getTime();\r\n\r\n            // Find the distance between now and the count down date\r\n            const distance = countDownDate - now;\r\n\r\n            // Time calculations for days, hours, minutes and seconds\r\n            const day = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            const hour = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            const minute = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            const second = Math.floor((distance % (1000 * 60)) / 1000);\r\n            if (days !== day) {\r\n                setDays(day);\r\n            }\r\n            if (hours !== hour) {\r\n                setHours(hour);\r\n            }\r\n            if (minutes !== minute) {\r\n                setMinutes(minute);\r\n            }\r\n            if (seconds !== second) {\r\n                setSeconds(second);\r\n            }\r\n\r\n            // If the count down is finished, write some text \r\n            if (distance < 0) {\r\n                clearInterval(x);\r\n                setIsExpired(true);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(x);\r\n        }\r\n\r\n    }, [days, hours, minutes, seconds]);\r\n\r\n    return (\r\n        <section className=\"section counter-area center-text\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"heading\">\r\n                            <h2 className=\"title\">Don't miss it!</h2>\r\n                            <span className=\"heading-bottom\"><i className=\"color-white icon icon-star\"></i></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-2\"></div>\r\n                    <div className=\"col-sm-8\">\r\n\r\n                        <div className=\"remaining-time\">\r\n                            {isExpired\r\n                                ? <div>Yay....</div>\r\n                                :\r\n                                <div id=\"clock\">\r\n                                    <div className=\"time-sec\"><span className=\"title\">{days}</span> Days </div>\r\n                                    <div className=\"time-sec\"><span className=\"title\">{hours}</span> Hours </div>\r\n                                    <div className=\"time-sec\"><span className=\"title\">{minutes}</span> Minutes </div>\r\n                                    <div className=\"time-sec\"><span className=\"title\">{seconds}</span> Seconds </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n        );\r\n}\r\n\r\nexport default CountDown;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}